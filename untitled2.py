# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13QvmmR5jozYyFV6TK3pZ3kr3jTVeyvX3
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix

train = pd.read_csv('/content/train_LZdllcl.csv')
test = pd.read_csv('/content/test_2umaH9m.csv')
sample_submission = pd.read_csv('/content/sample_submission_M0L0uXE.csv')

print(train.isnull().sum())
print(test.isnull().sum())

train['education'].fillna('Bachelor’s', inplace=True)
test['education'].fillna('Bachelor’s', inplace=True)
train['previous_year_rating'].fillna(train['previous_year_rating'].median(), inplace=True)
test['previous_year_rating'].fillna(test['previous_year_rating'].median(), inplace=True)

cat_cols = ['department', 'region', 'education', 'gender', 'recruitment_channel']
encoder = LabelEncoder()

for col in cat_cols:
 train[col] = encoder.fit_transform(train[col])
 test[col] = encoder.transform(test[col])

X = train.drop(columns=['employee_id', 'is_promoted'])
y = train['is_promoted']
test_data = test.drop(columns=['employee_id'])

X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_val)
print(classification_report(y_val, y_pred))
sns.heatmap(confusion_matrix(y_val, y_pred), annot=True, fmt='d')
plt.title('Confusion Matrix')
plt.show()

test_predictions = model.predict(test_data)

sample_submission['is_promoted'] = test_predictions
sample_submission.to_csv('final_submission.csv', index=False)
print("Submission file saved as final_submission.csv")

